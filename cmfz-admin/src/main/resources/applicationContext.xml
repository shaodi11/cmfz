<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注解扫描-->
    <context:component-scan base-package="com.baizhi.cmfz">

        <!--配置扫描除controller注解以外的所有-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>

    </context:component-scan>

    <!--添加小配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--数据库-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">

        <property name="driverClassName" value="${driver}"></property>
        <property name="url" value="${url}"></property>
        <property name="username" value="${name}"></property>
        <property name="password" value="${pwd}"></property>

    </bean>

    <!--spring工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.baizhi.cmfz.entity"></property>
        <property name="mapperLocations">
            <list>
                <value>classpath:com/baizhi/cmfz/mappers/*Mapper.xml</value>
            </list>
        </property>

    </bean>

    <!--mapper文件扫描,创建dao实现类-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">

        <property name="basePackage" value="com.baizhi.cmfz.dao"></property>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

    </bean>

    <!--事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--事务描述-->
   <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>


    <!-- 注册额外功能类,用于log对象的执行-->
    <bean id="myLogAdvice" class="com.baizhi.cmfz.util.MyLogAdvice"></bean>

    <!--使用Aspectj 风格的aop，对用户执行操作时，日志的监控-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>



    <!-- ======  shiro 的相关配置====================================================== -->
    <!--shiro的过滤器工厂对象  负责权限的校验，处理请求的bean-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

        <!--

            属性一:securityManager 安全管理器
            属性二：登录页面的url
            属性三：错误页面的url
            属性四：定义过滤器链的拦截规则,在value中分别定义拦截规则
        -->
        <property name="securityManager" ref="securityManager"></property>
        <property name="loginUrl" value="/login.jsp"></property>
        <property name="unauthorizedUrl" value="/error.jsp"></property>
        <property name="filterChainDefinitions">
            <value>
                /login.do=anon
                /getCode.do=anon

            </value>
        </property>
    </bean>

<!-- ============= 初始化web环境下的安全管理器 的相关配置================================================ -->

    <!--shiro的过滤器工厂对象的属性一，并初始化web环境下的安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--

        初始化安全管理器:
            属性一：自定义的数据源类，将自定义的数据源类注入过滤器中，
            属性二：记住我管理器，用于页面上的记住用户名及密码的管理
            属性三：缓存管理器，用于权限授权时，只进行一次，不重复授权
        -->
        <property name="realms">
            <list>
                <ref bean="myRealm"></ref>
            </list>
        </property>
        <property name="rememberMeManager" ref="rememberMeManager"></property>
      <!--  <property name="cacheManager" ref="ehCacheManager"></property>-->
    </bean>

<!--===============myRealm 自定义的数据源类 的配置=============================================-->

    <!--声明自定义的数据源类，引用复杂的凭证器对象-->
    <bean id="myRealm" class="com.baizhi.cmfz.util.MyRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

    <!--声明复杂的凭证匹配器对象，放至到自定义数据源类的声明处-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"></property>
        <property name="hashIterations" value="1024"></property>
    </bean>

<!-- ================== rememberMeManager 的bean 配置================================  -->
    <!--声明记住我的管理器bean-->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie" ref="simpleCookie"></property>
    </bean>

    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">

        <property name="name" value="rm"></property>
        <property name="maxAge" value="604800"></property>
        <property name="path" value="/"></property>

    </bean>


<!-- ================== 缓存管理器 的bean 配置 一般适用于本地缓存================================  -->
<!--    <bean id="ehCacheManager" class="EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>-->


</beans>